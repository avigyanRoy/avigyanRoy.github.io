import React, { useState, useEffect } from "react";
import { Link, useNavigate, useParams } from "react-router-dom";
import axios from "axios";

function QApage() {
    const { q_title } = useParams();
    const [question, setQuestion] = useState({});
    const [isLoading, setIsLoading] = useState(true);
    const [answer, setAnswer] = useState("");
    const navigate= useNavigate();
    function handleAnsChange(e) {
        setAnswer(e.target.value);
        console.log(answer);
    }
    async function handleAnsSubmit(e){
        e.preventDefault();
    try {
      const response = await axios.post("http://localhost:3001/askaquestion", {
        title: q_title,
        answer: answer,
      });

      if (response.data === "success") {
        navigate("/home");
      } else {
        alert("Error in posting answer");
      }
    } catch (e) {
      console.log(e);
    }
    }
    useEffect(() => {
        // Fetch the data from the backend when the component mounts
        axios
            .get("http://localhost:3001/qapage", {
                params: { q_title: q_title },
            })
            .then((response) => {
                setIsLoading(false);
                setQuestion(response.data);
            })
            .catch((error) => {
                console.log("Error while fetching data: ", error);
                setIsLoading(false);
            });
    }, [q_title]);

    if (isLoading) {
        return <div className="loading-message">Loading...</div>;
    }

    if (!q_title) {

        return <div>Invalid URL</div>;
    }
    return (
        <div className="qa-page-container">
            <div className="left-pane">
                <div className="list-of-options">
                    <Link to="/home" className="home-link">
                        <div className="option-btn ">
                            Home
                        </div>
                    </Link>
                    <div className="sub-section-of-topics">PUBLIC</div>
                    <div className="option-btn">
                        Tags
                    </div>
                    <div className="option-btn">
                        Users
                    </div>
                    <div className="option-btn">
                        Companies
                    </div>

                    <div className="sub-section-of-topics">COLLECTIVES</div>
                    <div className="option-btn">
                        Explore Collectives
                    </div>
                </div>
            </div>
            <div className="qa-section-container">
                <div className="q-section">
                    <div className="q-title">
                        {question.title}
                    </div>
                    <div className="q-desc">
                        {question.description}
                    </div>
                    {/* <div className="upvote-downvote-buttons">
                        <img src="https://png.pngtree.com/png-vector/20190419/ourmid/pngtree-vector-up-arrow-icon-png-image_956434.jpg" alt="" />
                        <div className="vote-count">{question.up_votes}</div>
                        <img src="https://png.pngtree.com/png-clipart/20190520/original/pngtree-vector-down-arrow-icon-png-image_4184718.jpg" alt="" />
                        <div className="vote-count">{question.down_votes}</div>
                    </div> */}


                </div>

                <div className="a-section">
                    <div className="a-section-heading">Answers</div>

                    {question.answers && question.answers.length > 0 ? (
                        question.answers.map((answer, answerIdx) => {
                            return (
                                <div className="answer-container" key={answerIdx}>
                                    <div className="ans-no">Answer {answerIdx+1}-</div>
                                    <div className="a-desc">{answer}</div>
                                    {/* <div className="upvote-downvote-buttons">
                                        <img src="https://png.pngtree.com/png-vector/20190419/ourmid/pngtree-vector-up-arrow-icon-png-image_956434.jpg" alt="" />
                                        <div className="vote-count">{question.answer_up_votes[answerIdx]}</div>
                                        <img src="https://png.pngtree.com/png-clipart/20190520/original/pngtree-vector-down-arrow-icon-png-image_4184718.jpg" alt="" />
                                        <div className="vote-count">{question.answer_down_votes[answerIdx]}</div>
                                    </div> */}
                                </div>
                            );
                        })
                    ) : (
                        <div className="no-answers-message">No answers yet.</div>
                    )}



                </div>

                <div className="write-ans-section">
                    <div className="write-ans-section-heading">
                        Your Answer
                    </div>
                    <textarea className="your-ans-area" id="" cols="30" rows="10" onChange={handleAnsChange} placeholder="Write your answer here"></textarea>
                    <button className="post-answer" onClick={handleAnsSubmit}>Post Answer</button>
                </div>
            </div>

        </div>
    );
}

export default QApage;